(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{379:function(_,v,t){"use strict";t.r(v);var r=t(7),a=Object(r.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"第九章-转移指令的原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第九章-转移指令的原理"}},[_._v("#")]),_._v(" "),v("strong",[_._v("第九章 转移指令的原理")])]),_._v(" "),v("p",[_._v("本章主要讲如何控制 CPU 执行指令的顺序。")]),_._v(" "),v("p",[_._v("可以修改 IP，或同时修改 CS 和 IP 的指令统称为转移指令。概括的降，转移指令就是可以控制 CPU 执行内存中某处代码的指令。")]),_._v(" "),v("p",[_._v("8086CPU 的转移指令有以下几类。")]),_._v(" "),v("ul",[v("li",[_._v("只修改 IP 时，称为"),v("strong",[_._v("段内转移")]),_._v("，比如：jum ax。")]),_._v(" "),v("li",[_._v("同时修改 CS 和 IP 时，称为"),v("strong",[_._v("段间转移")]),_._v("，比如：jmp 1000:0。")])]),_._v(" "),v("p",[_._v("由于转移指令对 IP 的修改范围不同，段内转移又分为：短转移和近转移。")]),_._v(" "),v("ul",[v("li",[_._v("短转移 IP 的修改范围为 - 128~127。")]),_._v(" "),v("li",[_._v("近转移 IP 的修改范围为 - 32768~32767。")])]),_._v(" "),v("p",[_._v("8086CPU 的转移指令分为以下几类。")]),_._v(" "),v("ul",[v("li",[_._v("无条件转移指令（如 jmp）")]),_._v(" "),v("li",[_._v("条件转移指令")]),_._v(" "),v("li",[_._v("循环指令（如 loop）")]),_._v(" "),v("li",[_._v("过程")]),_._v(" "),v("li",[_._v("中断")])]),_._v(" "),v("p",[_._v("这些转移指令的前提条件可能不同，但转移的基本原理是相同的。")]),_._v(" "),v("h2",{attrs:{id:"_9-1-操作符-offset"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-操作符-offset"}},[_._v("#")]),_._v(" "),v("strong",[_._v("9.1 操作符 offset")])]),_._v(" "),v("p",[_._v("操作符 offset 在汇编语言中是由编译器处理的符号，它的功能是取得标号的偏移地址。")]),_._v(" "),v("h2",{attrs:{id:"_9-2-jmp-指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-jmp-指令"}},[_._v("#")]),_._v(" "),v("strong",[_._v("9.2 jmp 指令")])]),_._v(" "),v("p",[_._v("jmp 为无条件转移指令，可以只修改 IP，也可以同时修改 CS 和 IP。")]),_._v(" "),v("p",[_._v("jmp 指令要给出两种信息：")]),_._v(" "),v("p",[_._v("（1）转移的目的地址"),v("br"),_._v("\n（2）转移的距离（段间转移、段内短转移、段内近转移）")]),_._v(" "),v("p",[_._v("下面几节将对 jmp 指令进行详细的介绍。")]),_._v(" "),v("h2",{attrs:{id:"_9-3-依据位移进行转移的jmp指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-依据位移进行转移的jmp指令"}},[_._v("#")]),_._v(" "),v("strong",[_._v("9.3 依据位移进行转移的 jmp 指令")])]),_._v(" "),v("blockquote",[v("p",[_._v("jmp short 标号")])]),_._v(" "),v("p",[_._v("实现的是段内短转移，执行后： （IP） = （IP）+ 8 位位移。")]),_._v(" "),v("p",[_._v("（1）8 位位移 = 标号处的地址 - jmp 指令后第一个字节的地址；"),v("br"),_._v("\n（2）short 指明此处的位移为 8 位位移；"),v("br"),_._v("\n（3）8 位位移的范围为 - 128~127，用补码表示；"),v("br"),_._v("\n（4）8 位位移由编译程序在编译时算出。")]),_._v(" "),v("blockquote",[v("p",[_._v("jmp near ptr 标号")])]),_._v(" "),v("p",[_._v("实现的是段内近转移，执行后：（IP） = （IP） + 16 位位移。")]),_._v(" "),v("p",[_._v("（1）16 位位移 = 标号处的地址 - jmp 指令后第一个字节的地址；"),v("br"),_._v("\n（2）near ptr 指明此处的位移为 16 位位移，进行的是段内近转移；\n（3）16 位位移的范围为 - 32768~32767，用补码表示；"),v("br"),_._v("\n（4）16 位位移由编译程序在编译时算出。")]),_._v(" "),v("h2",{attrs:{id:"_9-4-转移的目的地址在指令中的jmp指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-转移的目的地址在指令中的jmp指令"}},[_._v("#")]),_._v(" "),v("strong",[_._v("9.4 转移的目的地址在指令中的 jmp 指令")])]),_._v(" "),v("blockquote",[v("p",[_._v("jmp far ptr 标号")])]),_._v(" "),v("p",[_._v("实现的是段间转移，又称为远转移。功能如下："),v("br"),_._v("\n（CS）= 标号所在段的段地址；（IP）= 标号所在段中的偏移地址。")]),_._v(" "),v("p",[_._v("far ptr 指明了指令用标号的段地址和偏移地址修改 CS 和 IP。")]),_._v(" "),v("p",[_._v("该指令与上节学习的段内转移明显不同的是："),v("br"),_._v("\n段内转移机器指令携带的是位移，段间转移机器指令携带的是目的地址。")]),_._v(" "),v("h2",{attrs:{id:"_9-5-转移地址在寄存器中的jmp指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-5-转移地址在寄存器中的jmp指令"}},[_._v("#")]),_._v(" "),v("strong",[_._v("9.5 转移地址在寄存器中的 jmp 指令")])]),_._v(" "),v("blockquote",[v("p",[_._v("jmp 16 位的 reg")])]),_._v(" "),v("p",[_._v("该指令实现的功能为：（IP）= （16 位的 reg）")]),_._v(" "),v("h2",{attrs:{id:"_9-6-转移地址在内存中的jmp指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-6-转移地址在内存中的jmp指令"}},[_._v("#")]),_._v(" "),v("strong",[_._v("9.6 转移地址在内存中的 jmp 指令")])]),_._v(" "),v("blockquote",[v("p",[_._v("jmp word ptr 内存单元地址（段内转移）")])]),_._v(" "),v("p",[_._v("功能：从内存单元地址处开始存放一个字，是转移的目的偏移地址。")]),_._v(" "),v("p",[_._v("内存单元地址可以用之前学过的任一寻址方式给出。")]),_._v(" "),v("blockquote",[v("p",[_._v("jmp dword ptr 内存单元地址（段间转移）")])]),_._v(" "),v("p",[_._v("功能：从内存单元地址处开始存放着两个字，高地址处的字是转移的目的段地址，低地址处是转移的目的的偏移地址。")]),_._v(" "),v("h2",{attrs:{id:"_9-7-jcxz-指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-7-jcxz-指令"}},[_._v("#")]),_._v(" "),v("strong",[_._v("9.7 jcxz 指令")])]),_._v(" "),v("blockquote",[v("p",[_._v("jcxz 标号")])]),_._v(" "),v("p",[_._v("功能：如果（cx）=0，则转移到标号处执行。如果（cx）≠ 0，则程序继续向下执行。")]),_._v(" "),v("p",[_._v("jcxz 指令为有条件转递指令，所有的有条件转移指令都是短转移，在对应的机器码中包含转移的位移，而不是目的地址。对 IP 的修改范围都为：-128~127。")]),_._v(" "),v("h2",{attrs:{id:"_9-8-loop指令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-8-loop指令"}},[_._v("#")]),_._v(" "),v("strong",[_._v("9.8 loop 指令")])]),_._v(" "),v("blockquote",[v("p",[_._v("loop 标号")])]),_._v(" "),v("p",[_._v("功能：（cx）=（cx）-1，如果（cx）≠ 0，则转移到标号处执行。")]),_._v(" "),v("h2",{attrs:{id:"_9-9-根据位移进行转移的意义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-9-根据位移进行转移的意义"}},[_._v("#")]),_._v(" "),v("strong",[_._v("9.9 根据位移进行转移的意义")])]),_._v(" "),v("p",[_._v("方便了程序段在内存中的浮动装配。")]),_._v(" "),v("h2",{attrs:{id:"_9-10-编译器对转移位移超界的检测"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-10-编译器对转移位移超界的检测"}},[_._v("#")]),_._v(" "),v("strong",[_._v("9.10 编译器对转移位移超界的检测")])]),_._v(" "),v("p",[_._v("根据位移进行转移的指令，它们的转移范围受到转移位移的限制，如果在源程序中出现了转移范围超界的问题，在编译的时候，编译器将报错。")]),_._v(" "),v("hr")])}),[],!1,null,null,null);v.default=a.exports}}]);
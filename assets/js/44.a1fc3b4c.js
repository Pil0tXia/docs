(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{370:function(a,t,s){"use strict";s.r(t);var v=s(7),_=Object(v.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"课堂速记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#课堂速记"}},[a._v("#")]),a._v(" 课堂速记")]),a._v(" "),t("blockquote",[t("p",[a._v("本笔记使用教材《汇编语言（第三版）》，王爽，清华大学出版社")])]),a._v(" "),t("h2",{attrs:{id:"引入-进制转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引入-进制转换"}},[a._v("#")]),a._v(" 引入 进制转换")]),a._v(" "),t("h3",{attrs:{id:"十六转十进制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#十六转十进制"}},[a._v("#")]),a._v(" 十六转十进制")]),a._v(" "),t("p",[a._v("就用乘法，每一位乘以 16^0, 16^1, 16^2 ... 然后加在一起。")]),a._v(" "),t("p",[a._v("举个例子，ff bf 是几？答：65471")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/v2-49b3cf1778203483549538d2507d7d14_r.jpg",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"十六转二进制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#十六转二进制"}},[a._v("#")]),a._v(" 十六转二进制")]),a._v(" "),t("p",[a._v("更简单了，只需把每一位，变成二进制的四位数，然后拼在一起。")]),a._v(" "),t("p",[a._v("看个例子就懂了，ff bf 是二进制的几？答：1111 1111 1011 1111")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/v2-fa81bde836d04d2c611e3262621a690f_r.jpg",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"十进制转十六"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#十进制转十六"}},[a._v("#")]),a._v(" 十进制转十六")]),a._v(" "),t("p",[a._v("稍微复杂些，用短除法。每次除以 16，把余数从下到上拼起来，就得到了 16 进制的数。")]),a._v(" "),t("p",[a._v("来一起试试，65471 是十六进制的几？答：ff bf")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/v2-257788a2cf75694f6df06cde9dc5cb50_r.jpg",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"二进制转十六"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二进制转十六"}},[a._v("#")]),a._v(" 二进制转十六")]),a._v(" "),t("p",[a._v("又容易了，只需切成 4 个 4 个的小段，把每段对应的字母 / 数字拼在一起，就可以了。")]),a._v(" "),t("p",[a._v("比如这个例子，11 1111 1011 1111 是几？答：3f bf")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/v2-e4a8f95238e7b5d7ffd2ced29375a3e8_r.jpg",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"十进制转二进制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#十进制转二进制"}},[a._v("#")]),a._v(" 十进制转二进制")]),a._v(" "),t("p",[a._v("除二取余，倒序排列，高位补零。")]),a._v(" "),t("h3",{attrs:{id:"二进制转十进制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二进制转十进制"}},[a._v("#")]),a._v(" 二进制转十进制")]),a._v(" "),t("p",[a._v("同十六转十进制，但 16 改成 2")]),a._v(" "),t("h3",{attrs:{id:"巧算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#巧算法"}},[a._v("#")]),a._v(" 巧算法")]),a._v(" "),t("p",[a._v("如何快速把 2^n 的十进制数，转换为二进制？")]),a._v(" "),t("p",[a._v("只需把 n 除以 4，得到 j 余 i。把 i 变成 2^i 做为第一位，其余的就是，j 是几就跟几个零。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/v2-1bfa1c7bcc6f2cf25f51f5dc08ba47ff_r.jpg",alt:""}})]),a._v(" "),t("h2",{attrs:{id:"第二章-寄存器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第二章-寄存器"}},[a._v("#")]),a._v(" 第二章 寄存器")]),a._v(" "),t("h3",{attrs:{id:"_8086-访问地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8086-访问地址"}},[a._v("#")]),a._v(" 8086 访问地址")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220913160043333.png",alt:"image-20220913160043333"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220913160006739.png",alt:"image-20220913160006739"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220913160226911.png",alt:"image-20220913160226911"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220913160311958.png",alt:"image-20220913160311958"}})]),a._v(" "),t("p",[t("strong",[a._v("一个段的最大大小为 2^16=65536=64K，此为偏移地址的最大表示大小 FFFFH。")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220913160354815.png",alt:"image-20220913160354815"}})]),a._v(" "),t("h3",{attrs:{id:"cs-ip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cs-ip"}},[a._v("#")]),a._v(" CS:IP")]),a._v(" "),t("p",[a._v("代码段的段地址存放在 CS 中，指令指针寄存器 IP 指示代码段中指令的偏移地址，处理器利用 CS:IP 取得下一条要执行的指令。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220913160541141.png",alt:"image-20220913160541141"}})]),a._v(" "),t("h2",{attrs:{id:"第三章-寄存器-内存访问"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第三章-寄存器-内存访问"}},[a._v("#")]),a._v(" 第三章 寄存器（内存访问）")]),a._v(" "),t("h3",{attrs:{id:"内存中字的存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存中字的存储"}},[a._v("#")]),a._v(" 内存中字的存储")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220913155716253.png",alt:"image-20220913155716253"}})]),a._v(" "),t("p",[a._v("(1) 20H (2) 4E20H")]),a._v(" "),t("p",[a._v("字节型数据＜字型数据。一个字型数据 (如 1234H) 存放在内存中，"),t("strong",[a._v("由 2 个连续的地址的内存单元组成")]),a._v("。高地址内存单元存放字型数据的高位字节，低地址内存单元存放字型数据的低位字节。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220913160921444.png",alt:"image-20220913160921444"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220913182153695.png",alt:"image-20220913182153695"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220913182321717.png",alt:"image-20220913182321717"}})]),a._v(" "),t("p",[t("strong",[a._v("mov 的大小就是 al 的大小")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220913175140878.png",alt:"image-20220913175140878"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220913182520984.png",alt:"image-20220913182520984"}})]),a._v(" "),t("p",[t("strong",[a._v("此处 “一般的寄存器” 就是上例中的 bx")])]),a._v(" "),t("h4",{attrs:{id:"例1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例1"}},[a._v("#")]),a._v(" 例 1")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220920084151074.png",alt:"image-20220920084151074"}})]),a._v(" "),t("h4",{attrs:{id:"例2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例2"}},[a._v("#")]),a._v(" 例 2")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220920090126282.png",alt:"image-20220920090126282"}})]),a._v(" "),t("p",[a._v("1200+7C0A+4532+A963（舍弃溢出）")]),a._v(" "),t("h3",{attrs:{id:"堆栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#堆栈"}},[a._v("#")]),a._v(" 堆栈")]),a._v(" "),t("p",[a._v("8086CPU 入栈出栈都以字为单位，不能 push/pop 一个 al")]),a._v(" "),t("h4",{attrs:{id:"先进后出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#先进后出"}},[a._v("#")]),a._v(" 先进后出")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220920090712907.png",alt:"image-20220920090712907"}})]),a._v(" "),t("h4",{attrs:{id:"ss-sp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ss-sp"}},[a._v("#")]),a._v(" SS:SP")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220920090806265.png",alt:"image-20220920090806265"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220920091135542.png",alt:"image-20220920091135542"}})]),a._v(" "),t("p",[a._v("入栈出栈时 SP 会先进行 - 2/+2 的操作，push 时 SP 向上（低位）移动 - 2。然后将数据送入 SS:SP 指向的内存单元处。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220920094349099.png",alt:"image-20220920094349099"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220920094416090.png",alt:"image-20220920094416090"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220920094504975.png",alt:"image-20220920094504975"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220920094531191.png",alt:"image-20220920094531191"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220920094635326.png",alt:"image-20220920094635326"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220920095356999.png",alt:"image-20220920095356999"}})]),a._v(" "),t("h2",{attrs:{id:"第四章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第四章"}},[a._v("#")]),a._v(" 第四章")]),a._v(" "),t("h3",{attrs:{id:"源程序中的-程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#源程序中的-程序"}},[a._v("#")]),a._v(" 源程序中的 “程序”")]),a._v(" "),t("p",[a._v("汇编源程序：")]),a._v(" "),t("ul",[t("li",[a._v("伪指令（编译器处理）")]),a._v(" "),t("li",[a._v("汇编指令（编译为机器码）")])]),a._v(" "),t("p",[a._v("程序：源程序中最终由计算机执行、处理的指令或数据。")]),a._v(" "),t("h3",{attrs:{id:"汇编程序-伪指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#汇编程序-伪指令"}},[a._v("#")]),a._v(" 汇编程序 & 伪指令")]),a._v(" "),t("p",[a._v("codesg：标号，放在 segment 的前面，作为一个段的名称，这个段的名称最终将被编译、连接程序处理为一个段的段地址。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220927170327619.png",alt:"image-20220927170327619"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220927170240588.png",alt:"image-20220927170240588"}})]),a._v(" "),t("h3",{attrs:{id:"编译-连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译-连接"}},[a._v("#")]),a._v(" 编译 & 连接")]),a._v(" "),t("p",[a._v("当源程序很大时，可以将它分为多个源程序文件来编译，每个源程序编译成为目标文件后，再用连接程序将它们连接到一起，生成一个可执行文件；")]),a._v(" "),t("p",[a._v("程序中调用了某个库文件中的子程序，需要将这个库文件和该程序生成的目标文件连接到一起，生成一个可执行文件；")]),a._v(" "),t("p",[a._v("一个源程序编译后，得到了存有机器码的目标文件，目标文件中的有些内容还不能直接用来生成可执行文件，连接程序将这些内容处理为最终的可执行信息。")]),a._v(" "),t("p",[a._v("所以，在只有一个源程序文件，而又不需要调用某个库中的子程序的情况下，也必须用连接程序对目标文件进行处理，生成可执行文件。")]),a._v(" "),t("h3",{attrs:{id:"谁将可执行文件中的程序装载进入内存并使它运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#谁将可执行文件中的程序装载进入内存并使它运行"}},[a._v("#")]),a._v(" 谁将可执行文件中的程序装载进入内存并使它运行？")]),a._v(" "),t("p",[a._v("在 DOS 中，可执行文件中的程序 P1 若要运行，必须有一个正在运行的程序 P2 将 P1 从可执行文件中加载入内存，将 CPU 的控制权交给它，P1 才能得以运行；当 P1 运行完毕后，应该将 CPU 的控制权交还给使它得以运行的程序 P2。")]),a._v(" "),t("p",[a._v("（1）我们在 DOS 中直接执行 1.exe 时，是正在运行的 command 将 1.exe 中的程序加载入内存。")]),a._v(" "),t("p",[a._v("（2）command 设置 CPU 的 CS:IP 指向程序的第一条指令（即程序的入口），从而使程序得以运行。")]),a._v(" "),t("p",[a._v("（3）程序运行结束后，返回到 command 中，CPU 继续运行 command")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220927201137970.png",alt:"image-20220927201137970"}})]),a._v(" "),t("h3",{attrs:{id:"exe文件中的程序的加载过程-ds"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exe文件中的程序的加载过程-ds"}},[a._v("#")]),a._v(" EXE 文件中的程序的加载过程 DS")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220927203832279.png",alt:"image-20220927203832279"}})]),a._v(" "),t("p",[a._v("程序加载后，ds 中存放着程序所在内存区的段地址，这个内存区的偏移地址为 0，则程序所在的内存区的地址为：ds:0；")]),a._v(" "),t("p",[a._v("这个内存区的前 256 个字节中存放的是 PSP，dos 用来和程序进行通信。")]),a._v(" "),t("p",[a._v("所以，我们从 ds 中可以得到 PSP 的段地址 SA，PSP 的偏移地址为 0，则物理地址为 SAX16+0。")]),a._v(" "),t("p",[a._v("因为 PSP 占 256（100H）字节，所以程序的物理地址是：")]),a._v(" "),t("p",[a._v("SA×16+0+256= SA×16+16×16= (SA+16)×16+0")]),a._v(" "),t("p",[a._v("可用段地址和偏移地址表示为：SA+10:0")]),a._v(" "),t("h3",{attrs:{id:"程序执行过程的跟踪"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#程序执行过程的跟踪"}},[a._v("#")]),a._v(" 程序执行过程的跟踪")]),a._v(" "),t("p",[a._v("用 R 命令查看各个寄存器的设置情况")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220927211120745.png",alt:"image-20220927211120745"}})]),a._v(" "),t("p",[a._v("用 U 命令查看其他指令")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220927211023177.png",alt:"image-20220927211023177"}})]),a._v(" "),t("p",[a._v("使用 P 命令执行 int 21")]),a._v(" "),t("p",[a._v("使用 Q 命令退出 Debug")]),a._v(" "),t("h2",{attrs:{id:"第六章-包含多个段的程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第六章-包含多个段的程序"}},[a._v("#")]),a._v(" 第六章 包含多个段的程序")]),a._v(" "),t("h3",{attrs:{id:"在代码段中使用数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在代码段中使用数据"}},[a._v("#")]),a._v(" 在代码段中使用数据")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/IMG_20221004_082246.jpg",alt:"IMG_20221004_082246"}})]),a._v(" "),t("p",[a._v("程序解读见书 P124。 "),t("code",[a._v("mov ax,4c00h")]),a._v("  代表终止。")]),a._v(" "),t("p",[a._v("程序 6.2")]),a._v(" "),t("p",[a._v("end start 除了通知编译器程序结束外，还可以通知编译器程序的入口在什么地方。")]),a._v(" "),t("h3",{attrs:{id:"在代码段中使用栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在代码段中使用栈"}},[a._v("#")]),a._v(" 在代码段中使用栈")]),a._v(" "),t("p",[a._v("程序 6.3")]),a._v(" "),t("p",[a._v("30h 是 48 字节，正好对应 dw 分配的 16 个字型数据，用于栈的空间。")]),a._v(" "),t("h3",{attrs:{id:"将数据、代码、栈放入不同的段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将数据、代码、栈放入不同的段"}},[a._v("#")]),a._v(" 将数据、代码、栈放入不同的段")]),a._v(" "),t("p",[a._v("程序 6.4")]),a._v(" "),t("p",[a._v("cs 是自动装载的，不用在代码段中指定 cs 的指向。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("为什么 "),t("code",[a._v("mov bx,0")]),a._v("  可以将 ds:bx 指向 data 段中的第一个单元？")]),a._v(" "),t("p",[a._v("因为 0 被认为是 ds,[0]")])]),a._v(" "),t("li",[t("p",[a._v("为什么 "),t("code",[a._v("mov cx,5")]),a._v("  表示循环 5 次？")]),a._v(" "),t("p",[a._v("cs 用来控制循环次数，每次执行 loop 指令时，都会检查 cs 的值是否为 0")])])]),a._v(" "),t("h2",{attrs:{id:"第七章-更灵活的定位内存地址的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第七章-更灵活的定位内存地址的方法"}},[a._v("#")]),a._v(" 第七章 更灵活的定位内存地址的方法")]),a._v(" "),t("h3",{attrs:{id:"ascii码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ascii码"}},[a._v("#")]),a._v(" ASCII 码")]),a._v(" "),t("p",[a._v("程序 7.1")]),a._v(" "),t("p",[a._v("inc 加 1，而不是加 2，因为一个 ASCII 码占一个字节")]),a._v(" "),t("h3",{attrs:{id:"bx-idata-寄存器相对寻址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bx-idata-寄存器相对寻址"}},[a._v("#")]),a._v(" [bx+idata] 寄存器相对寻址")]),a._v(" "),t("p",[a._v("[bx+idata] 表示一个内存单元，它的偏移地址为 (bx)+idata（bx 中的数值加上 idata）")]),a._v(" "),t("p",[t("code",[a._v("mov ax,[bx+200]")])]),a._v(" "),t("p",[a._v("数学化描述：(ax)=((ds)*16+(bx)+200)")]),a._v(" "),t("h3",{attrs:{id:"si和di-基址变址寻址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#si和di-基址变址寻址"}},[a._v("#")]),a._v(" SI 和 DI 基址变址寻址")]),a._v(" "),t("p",[a._v("类似于 bx，但是不能分成两个 8 位寄存器")]),a._v(" "),t("p",[a._v("段寄存器、两个内存单元之间、两个段之间都不能直接 mov，需要用寄存器中转")]),a._v(" "),t("blockquote",[t("p",[a._v("SI 元变址寄存器")]),a._v(" "),t("p",[a._v("DI 目的变址寄存器")])]),a._v(" "),t("h3",{attrs:{id:"相对基址变址寻址-bx-si-idata-和-bx-di-idata"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相对基址变址寻址-bx-si-idata-和-bx-di-idata"}},[a._v("#")]),a._v(" 相对基址变址寻址（[bx+si+idata] 和 [bx+di+idata]）")]),a._v(" "),t("p",[a._v("问题 7.1、7.3、7.4、7.5 的分析很实用")]),a._v(" "),t("h2",{attrs:{id:"第八章-数据处理的两个基本问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第八章-数据处理的两个基本问题"}},[a._v("#")]),a._v(" 第八章 数据处理的两个基本问题")]),a._v(" "),t("blockquote",[t("p",[a._v("用 reg 表示一个寄存器，sreg 表示段寄存器")])]),a._v(" "),t("h3",{attrs:{id:"bx-si-di-bp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bx-si-di-bp"}},[a._v("#")]),a._v(" bx，si，di，bp")]),a._v(" "),t("p",[a._v("bp 用于在堆栈段上寻址，bs 默认用于数据段寻址。都是基址 (base)")]),a._v(" "),t("p",[a._v("“两个 i 不相见，两个 b 不相见”")]),a._v(" "),t("p",[a._v("错误指令：")]),a._v(" "),t("p",[t("code",[a._v("mov ax,[bx+bp]")])]),a._v(" "),t("p",[t("code",[a._v("mov ax,[si+di]")])]),a._v(" "),t("p",[a._v("只要在 [...] 中使用寄存器 bp，且指令中没有显性地给出段地址，段地址就"),t("a",{attrs:{href:"#%E5%B0%86%E6%95%B0%E6%8D%AE%E3%80%81%E4%BB%A3%E7%A0%81%E3%80%81%E6%A0%88%E6%94%BE%E5%85%A5%E4%B8%8D%E5%90%8C%E7%9A%84%E6%AE%B5"}},[a._v("默认在 ss 中")]),a._v("。")]),a._v(" "),t("h3",{attrs:{id:"寻址方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#寻址方式"}},[a._v("#")]),a._v(" 寻址方式")]),a._v(" "),t("p",[a._v("P164 表 8.2")]),a._v(" "),t("h3",{attrs:{id:"指令要处理的数据有多长"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指令要处理的数据有多长"}},[a._v("#")]),a._v(" 指令要处理的数据有多长？")]),a._v(" "),t("p",[t("code",[a._v("word ptr")]),a._v("  和 "),t("code",[a._v("byte ptr")]),a._v("  来显式的指定内存单元的长度")]),a._v(" "),t("p",[a._v("P166:  "),t("code",[a._v("mov word ptr [1000H],1")]),a._v("  -> 0100FF")]),a._v(" "),t("h3",{attrs:{id:"div指令-书p169"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#div指令-书p169"}},[a._v("#")]),a._v(" div 指令 书 P169")]),a._v(" "),t("p",[t("code",[a._v("div byte ptr ds:[0]")])]),a._v(" "),t("p",[a._v("(al) = (ax) / ((ds) * 16 + 0) 的商")]),a._v(" "),t("p",[a._v("(ah) = (ax) / ((ds) * 16 + 0) 的余数")]),a._v(" "),t("p",[t("code",[a._v("div word ptr es:[0]")])]),a._v(" "),t("p",[a._v("(ax) = [(dx) * 10000H + (ax)] / ((es) * 16 + 0) 的商")]),a._v(" "),t("p",[a._v("(dx) = [(dx) * 10000H + (ax)] / ((es) * 16 + 0) 的余数")]),a._v(" "),t("blockquote",[t("p",[a._v("低商高余")])]),a._v(" "),t("blockquote",[t("p",[a._v("例题")]),a._v(" "),t("p",[a._v("mov ax,data")]),a._v(" "),t("p",[a._v("mov ds,ax")]),a._v(" "),t("p",[a._v("mov ax,ds[0]")]),a._v(" "),t("p",[a._v("mov dx,ds[2]")]),a._v(" "),t("p",[a._v("div word ptr ds:[4]")])]),a._v(" "),t("h2",{attrs:{id:"第九章-转移指令的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第九章-转移指令的原理"}},[a._v("#")]),a._v(" 第九章 转移指令的原理")]),a._v(" "),t("h3",{attrs:{id:"offset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#offset"}},[a._v("#")]),a._v(" offset")]),a._v(" "),t("p",[a._v("P175、176")]),a._v(" "),t("blockquote",[t("p",[a._v("问题 9.1 为什么要加 "),t("code",[a._v("cs:")]),a._v(" ？")])]),a._v(" "),t("p",[a._v("不加冒号复制的是默认 ds 段")]),a._v(" "),t("h3",{attrs:{id:"jmp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jmp"}},[a._v("#")]),a._v(" jmp")]),a._v(" "),t("p",[a._v("讲得太快")]),a._v(" "),t("h2",{attrs:{id:"第十一章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第十一章"}},[a._v("#")]),a._v(" 第十一章")]),a._v(" "),t("h3",{attrs:{id:"pf标志-parity"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pf标志-parity"}},[a._v("#")]),a._v(" PF 标志（Parity）")]),a._v(" "),t("p",[a._v("表示奇偶性，1 的个数为奇数时 PF=0，为偶数个时 PF 为 1")]),a._v(" "),t("h3",{attrs:{id:"sf标志-sign"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sf标志-sign"}},[a._v("#")]),a._v(" SF 标志（Sign）")]),a._v(" "),t("p",[a._v("结果为负那么 SF=1，结果非负数则 SF=0；")]),a._v(" "),t("h3",{attrs:{id:"zf标志-zero"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zf标志-zero"}},[a._v("#")]),a._v(" ZF 标志（Zero）")]),a._v(" "),t("p",[a._v("结果为 0 那么 ZF=1, 结果不为 0 则 ZF=0；")]),a._v(" "),t("h3",{attrs:{id:"cf标志-carry"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cf标志-carry"}},[a._v("#")]),a._v(" CF 标志（Carry）")]),a._v(" "),t("p",[a._v("mov al,97H")]),a._v(" "),t("p",[a._v("sub al,98H")]),a._v(" "),t("p",[a._v("执行后：(al)=FFH, CF=1, CF 记录了向更高位的借位值")]),a._v(" "),t("p",[a._v("10010111")]),a._v(" "),t("p",[a._v("10011000")]),a._v(" "),t("p",[a._v("(-1)11111111")]),a._v(" "),t("p",[a._v("FFH")]),a._v(" "),t("h3",{attrs:{id:"of标志-overflow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#of标志-overflow"}},[a._v("#")]),a._v(" OF 标志（Overflow）")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mov al,98\nadd al,99\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")]),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("执行后 CF=0, OF=1")]),a._v(" "),t("p",[a._v("对于无符号数运算，没有进位，CF=0；对于有符号数运算，发生了溢出（数值位向符号位进了一位，虽然污染了符号位，但此时数还是八位。如果进到第九位，则产生了进位），OF=1")]),a._v(" "),t("h3",{attrs:{id:"adc指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#adc指令"}},[a._v("#")]),a._v(" adc 指令")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mov ax,1\nadd ax,ax\nadc ax,3\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")]),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("adc 利用了 CF，执行时相当于计算 (ax)+3+CF=2+3+0=5")]),a._v(" "),t("p",[a._v("计算 1EF000H+201000H，结果放在 ax（高 16 位）和 bx（低 16 位）中")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mov ax,001EH\nmov bx,F000H\nadd bx,1000H\nadc ax,0020H\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")]),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("h3",{attrs:{id:"sbb指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sbb指令"}},[a._v("#")]),a._v(" sbb 指令")]),a._v(" "),t("p",[a._v("adc 的减法版")]),a._v(" "),t("h3",{attrs:{id:"cmp指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cmp指令"}},[a._v("#")]),a._v(" cmp 指令")]),a._v(" "),t("p",[a._v("不保存结果的减法比较，仅仅根据结果设置标志位")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/IMG_20221101_091647.jpg",alt:"IMG_20221101_091647"}})]),a._v(" "),t("p",[a._v("cmp 比较大小不能仅靠 SF，因为可能溢出，还需要借助 OF")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("SF=1, OF=0，说明没有溢出，逻辑上结果正负 = 实际上结果正负，即 ah＜bh")])]),a._v(" "),t("li",[t("p",[a._v("SF=1, OF=1，溢出会污染符号位，正负性颠倒，即 ah＞bh")])]),a._v(" "),t("li",[t("p",[a._v("SF=0, OF=1，跟刚才逻辑一样，ah＜bh")])]),a._v(" "),t("li",[t("p",[a._v("SF=0, OF=0，ah＞bh；若 ZF=0，则 ah=bh")])])]),a._v(" "),t("p",[a._v("任意一个为 1，另一个为 0 时，前者＜后者")]),a._v(" "),t("h3",{attrs:{id:"je指令等"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#je指令等"}},[a._v("#")]),a._v(" je 指令等")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.pil0txia.com/picgo/IMG_20221101_093204.jpg",alt:"IMG_20221101_093204"}})]),a._v(" "),t("p",[a._v("有符号位的是 jl（小于）、jg（大于）")]),a._v(" "),t("h3",{attrs:{id:"df标志和串传送指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#df标志和串传送指令"}},[a._v("#")]),a._v(" DF 标志和串传送指令")]),a._v(" "),t("p",[a._v("df=0 每次操作后 si、di 递增")]),a._v(" "),t("p",[a._v("df=1 每次操作后 si、di 递减")]),a._v(" "),t("p",[a._v("movsb 将 ds:si 指向的内存单元的一个字节送入 es:di 中，然后根据 df 位的值，将 si 和 di 递增或递减")]),a._v(" "),t("p",[a._v("movsw")]),a._v(" "),t("p",[a._v("rep")]),a._v(" "),t("h2",{attrs:{id:"第十二章-内中断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第十二章-内中断"}},[a._v("#")]),a._v(" 第十二章 内中断")]),a._v(" "),t("p",[a._v("中断向量表 四个单元")]),a._v(" "),t("p",[a._v("do0")]),a._v(" "),t("h2",{attrs:{id:"第十三章-int指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第十三章-int指令"}},[a._v("#")]),a._v(" 第十三章 int 指令")]),a._v(" "),t("p",[a._v("int n，n 是中断类型码，功能是引发中断，相当于引发一个 n 号中断的中断过程，执行过程：")]),a._v(" "),t("p",[a._v("标志寄存器入栈，IF=0，TF=0；CS、IP 入栈；(IP)=(n*4), (CS)=(n*4+2)")]),a._v(" "),t("h3",{attrs:{id:"_13-5-bios和dos中断例程的安装过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-5-bios和dos中断例程的安装过程"}},[a._v("#")]),a._v(" 13.5 BIOS 和 DOS 中断例程的安装过程")]),a._v(" "),t("p",[a._v("编程时可以用 int 指令调用 BIOS 和 DOS 提供的中断例程")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("//不重要\nmov ah,9 //调用设置光标的子程序\nmov al,'a'\nmov bh,7 //颜色设置\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")]),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("h2",{attrs:{id:"第十四章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第十四章"}},[a._v("#")]),a._v(" 第十四章")]),a._v(" "),t("h3",{attrs:{id:"shl和shr指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shl和shr指令"}},[a._v("#")]),a._v(" shl 和 shr 指令")]),a._v(" "),t("p",[a._v("逻辑移位指令。将一个寄存器或内存单元中的数据向左移位，最后移出的一位写入 CF 中，最低为用 0 来补充。移动位数大于 1 时，必须把移动位数放在 cl 中。")]),a._v(" "),t("p",[a._v("shl 左移，shr 右移。会影响到符号位。（算术右移不会影响符号位）")]),a._v(" "),t("h2",{attrs:{id:"期末考试复习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#期末考试复习"}},[a._v("#")]),a._v(" 期末考试复习")]),a._v(" "),t("p",[a._v("选择，可能有判断题")]),a._v(" "),t("p",[a._v("写一些指令，进行纠正")]),a._v(" "),t("p",[a._v("2 道编程题")]),a._v(" "),t("p",[a._v("宏不作要求")]),a._v(" "),t("p",[a._v("一直到系统调用，比较重要")]),a._v(" "),t("p",[a._v("https://github.com/sanmianti/AssemblyLanguageTest/blob/master/%E3%80%8A%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E3%80%8B%E7%AC%AC%E4%B8%89%E7%89%88%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.md")])])}),[],!1,null,null,null);t.default=_.exports}}]);
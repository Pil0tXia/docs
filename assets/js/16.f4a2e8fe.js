(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{344:function(t,a,s){"use strict";s.r(a);var r=s(7),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"系统调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统调用"}},[t._v("#")]),t._v(" 系统调用")]),t._v(" "),a("p",[t._v("系统调用是应用程序获得 OS 服务的唯一途径。内核的主体是系统调用的集合，内核可以看成是特殊的公共子程序。")]),t._v(" "),a("h2",{attrs:{id:"系统调用的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统调用的方式"}},[t._v("#")]),t._v(" 系统调用的方式")]),t._v(" "),a("p",[t._v("用户 -> 应用程序 -> 系统调用（系统调用组成了程序接口 API，每一个系统调用都是一个完成特定功能的子程序）->OS 内核（裸机）")]),t._v(" "),a("p",[t._v("用户 -> 图形窗口 ->OS 内核（裸机）")]),t._v(" "),a("p",[t._v("用户 -> 操作命令 -> 系统程序（操作接口由一组控制命令和作业控制语句组成）->OS 内核（裸机）")]),t._v(" "),a("h2",{attrs:{id:"系统调用与库函数的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统调用与库函数的区别"}},[t._v("#")]),t._v(" 系统调用与库函数的区别")]),t._v(" "),a("p",[t._v("应用程序不可以直接调用系统调用，是通过库函数调用系统调用的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://static.pil0txia.com/picgo/image-20220922111334895.png",alt:"image-20220922111334895"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);